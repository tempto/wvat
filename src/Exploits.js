const { isCompleteCVE, isNumOnlyCVE } = require("./utils");

/**
 * Obtains the hyperlink to the known vulnerabilities for a given CVE in Exploit-DB (https://www.exploit-db.com)
 * @param {string} cve Common Vulnerability/Exposure code (in number only format, e.g. 2019-1234 or 2019-1234567)
 * @throws {Error} Missing cve
 * @throws {Error} Invalid cve format
 * @returns {string} Hyperlink to known vulnerabilities list
 */
const getExploitsDBExploitsUrl = (cve) => {
    if (!cve) throw new Error("Missing cve");
    if (!isNumOnlyCVE(cve)) throw new Error("Invalid cve format. Expected format: XXXX-YYYY");

    return `https://www.exploit-db.com/search?cve=${cve}`;
};

/**
 * Obtains the hyperlink to the known vulnerabilities for a given CVE in Rapid7 (https://www.rapid7.com)
 * @param {string} cve Common Vulnerability/Exposure code (in full format, e.g. CVE-2019-1234 or CVE-2019-1234567)
 * @throws {Error} Missing cve
 * @throws {Error} Invalid cve format
 * @returns {string} Hyperlink to known vulnerabilities list
 */
const getRapid7ExploitsUrl = (cve) => {
    if (!cve) throw new Error("Missing cve");
    if (!isCompleteCVE(cve)) throw new Error("Invalid cve format. Expected format: CVE-XXXX-YYYY");

    return `https://www.rapid7.com/db/?q=${cve}&type=nexpose`;
};

/**
 * Obtains the hyperlink to the known vulnerabilities for a given CVE in Circl.lu (https://www.circl.lu)
 * @param {string} cve Common Vulnerability/Exposure code (in number only format, e.g. 2019-1234 or 2019-1234567)
 * @throws {Error} Missing cve
 * @throws {Error} Invalid cve format
 * @returns {string} Hyperlink to known vulnerabilities list
 */
const getCirclExploitsUrl = (cve) => {
    if (!cve) throw new Error("Missing cve");
    if (!isNumOnlyCVE(cve)) throw new Error("Invalid cve format. Expected format: XXXX-YYYY");

    return `https://search.circl.lu/?q=${cve}`;
};

module.exports = {
    getExploitsDBExploitsUrl,
    getRapid7ExploitsUrl,
    getCirclExploitsUrl,
};
